/*
 (c) Copyright [2023] Open Text.
 Licensed under the Apache License, Version 2.0 (the "License");
 You may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

package vclusterops

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSpreadKeyGeneration(t *testing.T) {
	keyID := generateKeyID()
	const expectedKeyIDSize = 4
	assert.Equal(t, expectedKeyIDSize, len(keyID), "keyID '%s' is not %d in length", keyID, expectedKeyIDSize)
	spreadKey, err := generateSpreadKey()
	assert.NoError(t, err)
	const expectedSpreadKeySize = 32 * 2 // 32-bytes at 2 chars each
	assert.Equal(t, expectedSpreadKeySize, len(spreadKey), "spreadKey '%s' is not %d in length", spreadKey, expectedSpreadKeySize)
}

func TestReplaceSpreadKey(t *testing.T) {
	spread := `
	# 5
	# VSpreadKey:  {"vgaq": "50a5f78046b05881a2a10ba1799ec2b9ed97acf8e84331f51055e62d7d61b4f1"}
	# Auto-generated by vertica - do not edit
	ActiveIPVersion = IPv4
	Spread_Segment 10.244.0.128:4803 {
	  N010244000128    10.244.0.128 {
		10.244.0.128
	  }
	}
	Spread_Segment 10.244.0.129:4803 {
	  N010244000129    10.244.0.129 {
		10.244.0.129
	  }
	}
	Spread_Segment 10.244.0.130:4803 {
	  N010244000130    10.244.0.130 {
		10.244.0.130
	  }
	}
	# begin end matter
	EventLogFile = /dev/null
	EventTimeStamp = "[%a %d %b %Y %H:%M:%S]"`
	assert.True(t, hasSpreadKey(spread))
	payload := `{"key": "val"}`
	newSpread := replaceSpreadPayload(spread, payload)
	assert.Contains(t, newSpread, payload)
	assert.True(t, hasSpreadKey(newSpread))
}
